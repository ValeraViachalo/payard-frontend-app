import React, { useRef, useState } from "react";
import { motion, useScroll, useSpring, useTransform } from "framer-motion";

import s from "./Consulting.module.scss";
import clsx from "clsx";
import { ButtonMain } from "@/utils/Button/Button";

const contentFAQ = [
  {
    title: "Business Setup Assistance",
    text: "We help you establish your business with expert guidance on legal and financial matters.",
  },
  {
    title: "Account Management",
    text: "Our consultants support you in efficiently managing your accounts and optimizing your financial strategies.",
  },
  {
    title: "Global Compliance",
    text: "We help you establish your business with expert guidance on legal and financial matters.",
  },
];

export default function Consulting() {
  return (
    <section className={s.consulting}>
      <svg
        className={s.line}
        viewBox="0 0 249 251"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M172.217 0L-40.6094 212.826L-2.42561 251.01L248.584 0H172.217Z"
          fill="#9AF2FF"
        />
        <path
          d="M47.0683 168.011L41.8965 173.182L43.8969 177.818L42.3356 179.379L35.261 163.034L36.9036 161.391L53.2646 168.45L51.7033 170.011L47.0683 168.011ZM45.1329 167.181L41.6037 165.669C40.14 165.029 38.9203 164.482 37.9445 164.026L37.9282 164.042L39.5383 167.734L41.067 171.247L45.1329 167.181ZM61.816 159.898L60.3848 161.33L59.035 159.98C59.3602 161.584 58.9103 162.999 57.6851 164.224C57.0346 164.875 56.2322 165.298 55.2781 165.493C54.3348 165.677 53.3699 165.612 52.3832 165.298C51.3857 164.973 50.4912 164.414 49.6998 163.623C48.9083 162.831 48.3553 161.942 48.0409 160.956C47.7156 159.958 47.6451 158.988 47.8295 158.044C48.0246 157.09 48.4475 156.288 49.098 155.637C49.6943 155.041 50.372 154.634 51.1309 154.418C51.8791 154.19 52.6218 154.152 53.359 154.304L48.6752 149.62L50.1063 148.189L61.816 159.898ZM56.6605 162.484C57.4086 161.736 57.7231 160.869 57.6038 159.882C57.4954 158.885 57.0237 157.968 56.1889 157.134C55.354 156.299 54.4433 155.833 53.4566 155.735C52.47 155.616 51.6026 155.93 50.8545 156.678C50.3557 157.177 50.0359 157.757 49.8949 158.418C49.7431 159.069 49.7757 159.73 49.9925 160.403C50.2202 161.064 50.5997 161.66 51.1309 162.192C51.6622 162.723 52.2585 163.102 52.9199 163.33C53.5921 163.547 54.2589 163.585 54.9203 163.444C55.5817 163.303 56.1618 162.983 56.6605 162.484ZM71.663 150.051L70.2319 151.483L68.882 150.133C69.2073 151.737 68.7573 153.152 67.5321 154.377C66.8816 155.028 66.0793 155.451 65.1251 155.646C64.1819 155.83 63.2169 155.765 62.2302 155.451C61.2327 155.126 60.3383 154.567 59.5468 153.776C58.7553 152.984 58.2023 152.095 57.8879 151.108C57.5626 150.111 57.4922 149.141 57.6765 148.197C57.8716 147.243 58.2945 146.441 58.945 145.79C59.5413 145.194 60.219 144.787 60.978 144.571C61.7261 144.343 62.4688 144.305 63.206 144.457L58.5222 139.773L59.9534 138.342L71.663 150.051ZM66.5075 152.637C67.2556 151.889 67.5701 151.022 67.4508 150.035C67.3424 149.038 66.8707 148.121 66.0359 147.287C65.201 146.452 64.2903 145.986 63.3036 145.888C62.317 145.769 61.4496 146.083 60.7015 146.831C60.2027 147.33 59.8829 147.91 59.7419 148.571C59.5901 149.222 59.6227 149.883 59.8395 150.556C60.0672 151.217 60.4467 151.813 60.978 152.345C61.5092 152.876 62.1056 153.255 62.7669 153.483C63.4392 153.7 64.106 153.738 64.7673 153.597C65.4287 153.456 66.0088 153.136 66.5075 152.637ZM65.2916 137.004C64.988 137.308 64.6194 137.46 64.1857 137.46C63.752 137.46 63.3833 137.308 63.0797 137.004C62.7653 136.69 62.6135 136.321 62.6244 135.898C62.6244 135.465 62.7762 135.096 63.0797 134.792C63.3942 134.478 63.7628 134.326 64.1857 134.337C64.6085 134.326 64.9772 134.478 65.2916 134.792C65.5952 135.096 65.747 135.465 65.747 135.898C65.7578 136.321 65.606 136.69 65.2916 137.004ZM74.2527 147.462L65.8608 139.07L67.292 137.639L75.6839 146.03L74.2527 147.462ZM80.0932 139.084C80.3751 138.802 80.6787 138.434 81.004 137.978L82.3051 139.279C82.1099 139.691 81.7521 140.157 81.2317 140.678C80.4944 141.415 79.7192 141.8 78.906 141.833C78.082 141.854 77.2851 141.48 76.5153 140.71L71.62 135.815L70.1563 137.279L68.904 136.027L70.3677 134.563L68.0095 132.205L69.4569 130.757L71.8151 133.115L74.0432 130.887L75.2955 132.14L73.0674 134.368L77.9139 139.214C78.597 139.897 79.3234 139.854 80.0932 139.084ZM75.2657 127.03C74.9621 127.334 74.5934 127.486 74.1597 127.486C73.726 127.486 73.3574 127.334 73.0538 127.03C72.7394 126.716 72.5876 126.347 72.5984 125.924C72.5984 125.491 72.7502 125.122 73.0538 124.818C73.3682 124.504 73.7369 124.352 74.1597 124.363C74.5826 124.352 74.9512 124.504 75.2657 124.818C75.5692 125.122 75.721 125.491 75.721 125.924C75.7319 126.347 75.5801 126.716 75.2657 127.03ZM84.2268 137.488L75.8349 129.096L77.2661 127.664L85.658 136.056L84.2268 137.488ZM91.84 130.07C91.0811 130.829 90.2028 131.327 89.2053 131.566C88.2078 131.783 87.2049 131.745 86.1966 131.452C85.1883 131.138 84.2938 130.59 83.5131 129.809C82.7325 129.029 82.1904 128.14 81.8868 127.142C81.5832 126.123 81.5453 125.12 81.7729 124.133C82.0006 123.125 82.494 122.241 83.2529 121.482L83.2692 121.466C84.0173 120.718 84.8901 120.236 85.8876 120.019C86.8851 119.78 87.888 119.818 88.8963 120.133C89.9047 120.425 90.7992 120.962 91.5798 121.743C92.3605 122.523 92.9026 123.423 93.2062 124.442C93.5097 125.44 93.5477 126.443 93.32 127.451C93.0923 128.438 92.6044 129.305 91.8563 130.053L91.84 130.07ZM90.4576 128.655C90.9455 128.167 91.2545 127.598 91.3846 126.947C91.5256 126.286 91.4822 125.624 91.2545 124.963C91.0268 124.301 90.6528 123.711 90.1324 123.19C89.6228 122.681 89.0319 122.317 88.3596 122.1C87.6983 121.873 87.0423 121.824 86.3918 121.954C85.7304 122.073 85.1557 122.377 84.6678 122.865L84.6516 122.881C84.1528 123.38 83.8384 123.965 83.7083 124.638C83.5782 125.288 83.6216 125.949 83.8384 126.622C84.0552 127.272 84.4239 127.858 84.9443 128.378C85.4647 128.899 86.0557 129.273 86.717 129.5C87.3893 129.717 88.0506 129.761 88.7012 129.63C89.3626 129.489 89.9426 129.17 90.4414 128.671L90.4576 128.655ZM93.0773 111.658C94.0098 110.726 95.0669 110.286 96.2487 110.341C97.4305 110.395 98.5473 110.948 99.599 112L104.657 117.058L103.226 118.489L98.1352 113.398C97.5606 112.824 96.8884 112.553 96.1186 112.585C95.3488 112.596 94.6711 112.894 94.0856 113.48C93.5002 114.065 93.2074 114.77 93.2074 115.594C93.2074 116.396 93.4947 117.085 94.0694 117.659L99.0623 122.652L97.6311 124.083L89.2391 115.691L90.6541 114.276L91.8576 115.48C91.6949 114.84 91.7274 114.179 91.9551 113.496C92.172 112.802 92.546 112.189 93.0773 111.658ZM106.09 98.8408L114.482 107.233L113.05 108.664L111.701 107.314C112.004 108.94 111.565 110.344 110.383 111.526C109.7 112.209 108.882 112.648 107.927 112.844C106.984 113.028 106.019 112.963 105.033 112.648C104.046 112.312 103.157 111.749 102.365 110.957C101.574 110.166 101.016 109.282 100.69 108.306C100.365 107.309 100.295 106.338 100.479 105.395C100.674 104.441 101.113 103.622 101.796 102.939C102.393 102.343 103.065 101.942 103.813 101.736C104.561 101.508 105.298 101.475 106.025 101.638L104.659 100.272L106.09 98.8408ZM109.245 109.867C109.733 109.38 110.042 108.821 110.172 108.192C110.291 107.553 110.231 106.907 109.993 106.257C109.765 105.596 109.386 104.999 108.855 104.468C108.323 103.937 107.732 103.563 107.082 103.346C106.431 103.107 105.792 103.053 105.163 103.183C104.523 103.302 103.959 103.606 103.471 104.094C102.983 104.582 102.674 105.151 102.544 105.802C102.414 106.43 102.458 107.081 102.674 107.753C102.891 108.404 103.265 108.995 103.797 109.526C104.328 110.057 104.924 110.437 105.586 110.664C106.258 110.881 106.914 110.93 107.553 110.811C108.193 110.67 108.757 110.355 109.245 109.867ZM118.504 103.21L117.057 104.658L105.347 92.9481L106.794 91.5006L118.504 103.21ZM122.895 91.1755C123.697 91.8911 124.543 92.2597 125.432 92.2814C126.321 92.3031 127.14 91.9399 127.888 91.1918C128.604 90.4762 128.972 89.7389 128.994 88.9799C129.005 88.2101 128.745 87.5596 128.213 87.0283C127.758 86.5729 127.216 86.3453 126.587 86.3453C125.958 86.3236 125.297 86.5079 124.603 86.8982L122.798 87.8903C121.627 88.5408 120.542 88.8227 119.545 88.736C118.547 88.6492 117.685 88.2427 116.959 87.5162C116.384 86.9416 115.999 86.2639 115.804 85.4833C115.609 84.7026 115.642 83.9003 115.902 83.0763C116.151 82.2414 116.634 81.4662 117.349 80.7506C118.076 80.0242 118.878 79.5688 119.756 79.3845C120.624 79.1893 121.464 79.2273 122.277 79.4983C123.101 79.7586 123.8 80.176 124.375 80.7506L122.928 82.1981C122.32 81.6126 121.616 81.3198 120.813 81.3198C120.022 81.309 119.328 81.6017 118.732 82.1981C118.309 82.6209 118.016 83.0763 117.853 83.5642C117.702 84.0413 117.675 84.5021 117.772 84.9466C117.87 85.3694 118.07 85.7327 118.374 86.0362C118.764 86.4266 119.241 86.6543 119.805 86.7193C120.358 86.7735 120.998 86.6 121.724 86.1989L123.497 85.2068C124.711 84.5129 125.839 84.1985 126.88 84.2635C127.92 84.3069 128.853 84.7406 129.677 85.5646C130.284 86.1718 130.696 86.8765 130.913 87.6789C131.119 88.4703 131.092 89.2998 130.832 90.1672C130.571 91.0345 130.062 91.8477 129.303 92.6067C128.576 93.3331 127.758 93.8373 126.847 94.1192C125.936 94.3794 125.004 94.3902 124.05 94.1517C123.096 93.9132 122.212 93.4199 121.399 92.6717L122.895 91.1755ZM132.063 82.2028C132.887 82.8533 133.754 83.1894 134.665 83.2111C135.587 83.2219 136.416 82.8587 137.153 82.1215C137.75 81.5251 138.075 80.8963 138.129 80.2349C138.194 79.5627 138.108 78.9989 137.869 78.5435L139.382 77.031C139.663 77.443 139.88 77.996 140.032 78.6899C140.184 79.3838 140.157 80.159 139.951 81.0155C139.734 81.8612 139.241 82.669 138.471 83.4388C137.679 84.2303 136.79 84.7507 135.804 85.0001C134.817 85.2278 133.825 85.1898 132.827 84.8862C131.83 84.561 130.93 83.9972 130.128 83.1948C129.336 82.4034 128.783 81.5143 128.469 80.5276C128.143 79.5301 128.089 78.5435 128.306 77.5677C128.534 76.581 129.027 75.7082 129.786 74.9493C130.523 74.212 131.38 73.7349 132.356 73.5181C133.321 73.2904 134.291 73.3283 135.267 73.6319C136.243 73.9355 137.105 74.4614 137.853 75.2095C138.015 75.3721 138.205 75.5835 138.422 75.8438L132.063 82.2028ZM131.103 76.2666C130.442 76.928 130.111 77.6924 130.111 78.5598C130.111 79.4055 130.393 80.2186 130.957 80.9993L135.82 76.1365C135.061 75.5727 134.253 75.2854 133.397 75.2745C132.54 75.2637 131.776 75.5944 131.103 76.2666ZM139.208 65.5269C139.512 65.2233 139.783 64.9848 140.022 64.8113L141.453 66.2425C141.052 66.5352 140.775 66.7575 140.623 66.9093C139.951 67.5815 139.61 68.3242 139.599 69.1374C139.599 69.9397 139.995 70.7366 140.786 71.5281L145.486 76.2282L144.055 77.6594L135.663 69.2675L137.094 67.8363L138.184 68.9259C138.054 68.3405 138.065 67.755 138.216 67.1695C138.368 66.584 138.699 66.0365 139.208 65.5269ZM149.22 55.7106L154.229 67.4854L152.717 68.9979L140.926 64.005L142.471 62.46L148.065 64.8669C149.507 65.485 150.722 66.0271 151.708 66.4933L151.724 66.477L151.269 65.5012C150.868 64.6013 150.478 63.7122 150.098 62.834L147.675 57.2556L149.22 55.7106ZM149.785 52.5105C149.482 52.8141 149.113 52.9659 148.679 52.9659C148.246 52.9659 147.877 52.8141 147.573 52.5105C147.259 52.1961 147.107 51.8275 147.118 51.4046C147.118 50.9709 147.27 50.6023 147.573 50.2987C147.888 49.9843 148.257 49.8325 148.679 49.8433C149.102 49.8325 149.471 49.9843 149.785 50.2987C150.089 50.6023 150.241 50.9709 150.241 51.4046C150.252 51.8275 150.1 52.1961 149.785 52.5105ZM158.746 62.9679L150.355 54.576L151.786 53.1448L160.178 61.5367L158.746 62.9679ZM162.798 47.6946C162.223 47.3802 161.594 47.2826 160.911 47.4019C160.239 47.5103 159.659 47.8085 159.171 48.2964C158.662 48.806 158.342 49.3969 158.212 50.0691C158.071 50.7305 158.114 51.4027 158.342 52.0858C158.569 52.7472 158.944 53.3381 159.464 53.8585C159.984 54.3789 160.586 54.753 161.269 54.9807C161.941 55.1975 162.614 55.2409 163.286 55.1108C163.947 54.9698 164.527 54.65 165.026 54.1512C165.514 53.6633 165.807 53.0778 165.904 52.3948C166.002 51.7117 165.904 51.1045 165.612 50.5733L167.124 49.0608C167.449 49.4945 167.682 50.0854 167.823 50.8335C167.975 51.5708 167.948 52.3677 167.742 53.2242C167.536 54.0591 167.086 54.8235 166.392 55.5174C165.633 56.2763 164.755 56.7751 163.758 57.0136C162.749 57.2413 161.741 57.2088 160.733 56.916C159.713 56.6124 158.813 56.0703 158.033 55.2897C157.252 54.509 156.715 53.6145 156.423 52.6062C156.119 51.587 156.087 50.5787 156.325 49.5812C156.553 48.5729 157.046 47.6892 157.805 46.9303C158.532 46.2038 159.323 45.7376 160.18 45.5316C161.025 45.3148 161.822 45.2876 162.57 45.4503C163.308 45.6021 163.888 45.846 164.31 46.1821L162.798 47.6946ZM169.069 45.1971C169.893 45.8476 170.76 46.1837 171.671 46.2054C172.592 46.2162 173.422 45.853 174.159 45.1157C174.755 44.5194 175.081 43.8906 175.135 43.2292C175.2 42.557 175.113 41.9932 174.875 41.5378L176.387 40.0253C176.669 40.4373 176.886 40.9902 177.038 41.6842C177.19 42.3781 177.162 43.1533 176.956 44.0098C176.74 44.8555 176.246 45.6633 175.476 46.4331C174.685 47.2246 173.796 47.745 172.809 47.9944C171.823 48.2221 170.831 48.1841 169.833 47.8805C168.836 47.5553 167.936 46.9915 167.133 46.1891C166.342 45.3976 165.789 44.5086 165.474 43.5219C165.149 42.5244 165.095 41.5378 165.312 40.562C165.54 39.5753 166.033 38.7025 166.792 37.9436C167.529 37.2063 168.386 36.7292 169.361 36.5124C170.326 36.2847 171.297 36.3226 172.273 36.6262C173.248 36.9298 174.11 37.4557 174.858 38.2038C175.021 38.3664 175.211 38.5778 175.428 38.838L169.069 45.1971ZM168.109 39.2609C167.448 39.9223 167.117 40.6867 167.117 41.554C167.117 42.3997 167.399 43.2129 167.963 43.9936L172.826 39.1308C172.067 38.567 171.259 38.2797 170.402 38.2688C169.546 38.258 168.781 38.5887 168.109 39.2609Z"
          fill="black"
        />
      </svg>

      <div className={s.text}>
        <h1 className={s.title}>Expert Consulting</h1>
        <h2>
          <Paragraph
            paragraph={[
              "We know financial and legal stuff can get tricky, but we've got your back. Our consulting services are designed to make your life easier, whether you're taking your business global or keeping everything running smoothly at home. ",
              "Think of us as your guide, making sure everything stays on track so you can focus on what matters most. ",
            ]}
          />
        </h2>
      </div>

      <div className={s.faq}>
        {contentFAQ.map((currQ, i) => (
          <FAQCard content={currQ} key={i} />
        ))}
        <div className={s.faq_button}>
          <p className={s.text}>Do You Have Any Questions?</p>
          <ButtonMain link="" text="Get in Touch" />
        </div>
      </div>
    </section>
  );
}

const FAQCard = ({ content }) => {
  const [isActive, setIsActive] = useState(false);

  return (
    <div
      className={clsx(s.card, {
        [s.card_active]: isActive,
      })}
    >
      <div className={s.top} onClick={() => setIsActive(!isActive)}>
        <p>{content.title}</p>
        <div className={s.card_line_wrapper}>
          <span className={s.card_line} />
          <span className={s.card_line} />
        </div>
      </div>
      <p className={"shadow " + s.content}>{content.text}</p>
    </div>
  );
};

const Paragraph = ({ paragraph }) => {
  const container = useRef(null);
  const { scrollYProgress } = useScroll({
    target: container,
    offset: ["0% 75%", "0% 15%"],
  });

  // Calculate total words across all paragraphs
  const totalWords = paragraph.reduce((acc, para) => acc + para.split(" ").length, 0);
  let wordIndex = 0;

  return (
    <div className={s.paragraphWrapper} ref={container}>
      {paragraph.map((para, paraIndex) => {
        const words = para.split(" ");
        
        const paragraphJsx = words.map((word, i) => {
          const start = wordIndex / (totalWords + 7) - 0.1;
          const end = wordIndex / (totalWords + 7) + 0.1;
          wordIndex++;
          
          return (
            <Word 
              key={`${paraIndex}-${i}`} 
              progress={scrollYProgress} 
              range={[start, end]}
            >
              {word}
            </Word>
          );
        });

        return (
          <p key={paraIndex} className={s.paragraph}>
            {paragraphJsx}
          </p>
        );
      })}
    </div>
  );
};
const Word = ({ children, progress, range }) => {
  const progressSpring = useSpring(progress, {
    damping: 500,
    stiffness: 1500,
    duration: 0.4,
    // mass: 1
  });
  const opacity = useTransform(progressSpring, range, [0, 1]);
  const filter = useTransform(progressSpring, range, [
    "blur(.2vw)",
    "blur(0vw)",
  ]);

  return (
    <motion.span className={s.word}>
      <span
        className={s.shadow}
      >
        {children}
      </span>
      <motion.span
        style={{ opacity, filter }}
      >
        {children}
      </motion.span>
    </motion.span>
  );
};
